import java.util.HashMap;
import java.util.Map;

public class Solution {
    public int subarraySum(int[] nums, int k) {
        int sum = 0;          // running prefix sum
        int result = 0;       // total number of subarrays found
        Map<Integer, Integer> preSum = new HashMap<>(); // stores prefix sum counts

        // Base case: prefix sum 0 appears once before starting
        preSum.put(0, 1);

        for (int i = 0; i < nums.length; i++) {
            sum += nums[i]; // update running sum

            // Check if there exists a prefix sum so that subarray sum = k
            if (preSum.containsKey(sum - k)) {
                result += preSum.get(sum - k); 
            }

            // Update the frequency of the current prefix sum
            preSum.put(sum, preSum.getOrDefault(sum, 0) + 1);
        }

        return result;
    }

    // Example run
    public static void main(String[] args) {
        Solution sol = new Solution();
        int[] nums = {1, 2, 3};
        int k = 3;
        System.out.println(sol.subarraySum(nums, k)); // Output: 2
    }
}
